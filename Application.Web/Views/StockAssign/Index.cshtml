@model IEnumerable<CenGts.Web.Models.ViewModels.StockAssignViewModel>

@{
    ViewBag.Title = "Index";
}
<p>
    <button id="createBtn" type="button" class="btn btn-primary crud" data-request-url="@Url.Action("Create")">Create</button>
    @*@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-large" })*@
</p>
@Html.Partial("_CrudModal")
<div class="table-responsive">
    <div class="box-body">
        <div id="datatable_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
            <div class="table-responsive">
                <table id="dataTable" class="table table-bordered table-striped dataTable" role="grid" aria-describedby="datatable_info">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Item.Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Location.Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Warehouse.WarehouseCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TotalQtyStock)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Location.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Warehouse.WarehouseCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalQtyStock)
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a class="btn btn-primary" href="#"><i class="fa fa-gear fa-fw"></i> Action</a>
                                        <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">
                                            <span class="fa fa-caret-down" title="Toggle dropdown menu"></span>
                                        </a>
                                        <ul class="dropdown-menu" role="menu">
                                            <li class="crud" data-id="@item.Id" data-request-url="@Url.Action("Edit")"><a>Edit</a></li>
                                            <li class="crud" data-id="@item.Id" data-request-url="@Url.Action("Details")"><a>Details</a></li>
                                            <li class="crud" data-id="@item.Id" data-request-url="@Url.Action("Delete")"><a>Delete</a></li>

                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

     var msg = "@TempData["Message"]";
    if (msg != "") {
        swal("Success!", "@TempData["Message"]".toString(), "success");
        '@TempData.Remove("Message")';
    }

    $("#dataTable").DataTable();

    $("#dataTable").on("click", ".crud", function () {
        btnClicked($(this));
    });

    $("#createBtn").click(function () {
        btnClicked($(this));
    });

    var btnClicked = function (btnClick) {
        var url = btnClick.data('request-url') + '?id=' + btnClick.data('id');
        AjaxCrudCall(url, "GET");
    };

</script>