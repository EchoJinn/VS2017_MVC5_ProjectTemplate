@model Application.Web.Models.ViewModels.StockAssignViewModel

@{
    ViewBag.Title = "Create";
}

<div id="form-container" data-url="@Url.Action("Create","StockAssign")">
    @using (Html.BeginForm("Create", "StockAssign", FormMethod.Post, new { id = "create-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemId, "ItemId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ItemId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WarehouseId, "WarehouseId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("WarehouseId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WarehouseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalQtyStock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalQtyStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalQtyStock, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="box-footer">
                <input type="submit" id="create-submit" value="Save" class="btn btn-primary pull-right" />
            </div>
        </div>
    }
</div>

<script type="text/javascript">

    $('#create-submit').click(function () {
        var formcontainer = $('#form-container');
        var url = formcontainer.attr('data-url');
        var form = $('#create-form');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
        form.validationEngine('validate');

        return false;
    });

    $('.modal-title').html("<b>Create</b>");

</script>
