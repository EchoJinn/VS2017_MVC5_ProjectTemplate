@model CenGts.Web.Models.ViewModels.DeliveryRequestViewModel

@{
    ViewBag.Title = "Delivery Request Edit";
}

<style type="text/css">
    hr.style5 {
        background-color: #fff;
        border-top: 2px dashed #8c8b8b;
    }

    .shadow-textarea textarea.form-control::placeholder {
        font-weight: 300;
    }

    .shadow-textarea textarea.form-control {
        padding-left: 0.8rem;
    }

    .select2-container {
        width: 100% !important;
    }
</style>

<div id="form-container" data-url="@Url.Action("Edit","DeliveryRequest")">
    @using (Html.BeginForm("Edit", "DeliveryRequest", FormMethod.Post, new { id = "edit-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="form-horizontal">
                <div class="col-md-12">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.CustomerId)
                    @Html.HiddenFor(model => model.StatusId)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.DateCreated)
                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.DeliveryRequestCode)
                    @Html.HiddenFor(model => model.IsProcessing)

                    <div class="form-group">
                        @*<div class="col-md-6">
                            @Html.LabelFor(model => model.DeliveryRequestCode, htmlAttributes: new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.DeliveryRequestCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.DeliveryRequestCode, "", new { @class = "text-danger" })
                        </div>*@
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ServiceCode, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.ServiceCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.RequestType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.RequestedDate, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.TextBox("RequestedDate", Model.RequestedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", min =
                                                          (Model.RequestedDate < DateTime.Now ? Model.RequestedDate.ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")) })
                            @Html.ValidationMessageFor(model => model.RequestedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.RequiredDate, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.TextBox("RequiredDate", Model.RequiredDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", min = 
                                                         (Model.RequiredDate < DateTime.Now ? ((DateTime)Model.RequiredDate).ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")) })
                            @Html.ValidationMessageFor(model => model.RequiredDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.RequiredDeliveryDate, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.TextBox("RequiredDeliveryDate", Model.RequiredDeliveryDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", min = 
                                                                 (Model.RequiredDeliveryDate < DateTime.Now ? ((DateTime)Model.RequiredDeliveryDate).ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")) })
                            @Html.ValidationMessageFor(model => model.RequiredDeliveryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.WarehouseId, htmlAttributes: new { @class = "control-label required" })
                            <select class="form-control" id="WarehouseId" name="WarehouseId">
                                <option value="@Model.WarehouseId" selected="selected">@Model.WarehouseDescription</option>
                            </select>
                            @*@Html.EditorFor(model => model.WarehouseId, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.WarehouseId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CustomerClientId, htmlAttributes: new { @class = "control-label col-md-15 required" })
                            <select class="form-control" id="CustomerClientId" name="CustomerClientId">
                                <option value="@Model.CustomerClientId" selected="selected">@Model.CustomerClientName</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.CustomerClientId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CustomerRef, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.CustomerRef, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerRef, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.HaulierId, htmlAttributes: new { @class = "control-label" })
                            <select class="form-control" id="HaulierId" name="HaulierId">
                                @if (Model.HaulierId != null)
                                {
                                    <option value="@Model.HaulierId" selected="selected">@Model.HaulierName</option>
                                }
                            </select>
                            @*@Html.EditorFor(model => model.HaulierId, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.HaulierId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.SalesOrderRef, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.SalesOrderRef, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SalesOrderRef, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.EarliestDate, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.TextBox("EarliestDate", Model.EarliestDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", min = 
                                                         (Model.EarliestDate < DateTime.Now ? ((DateTime)Model.EarliestDate).ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")) })
                            @Html.ValidationMessageFor(model => model.EarliestDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.LatestDate, htmlAttributes: new { @class = "control-label col-md-15" })
                            @Html.TextBox("LatestDate", Model.LatestDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", min =
                                                         (Model.EarliestDate < DateTime.Now ? ((DateTime)Model.LatestDate).ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")) })
                            @Html.ValidationMessageFor(model => model.LatestDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="box-footer">
            <input type="submit" id="edit-submit" value="Save" class="btn btn-primary pull-right" />
        </div>
    }
</div>

<link href="~/Content/css-select2/select2.css" rel="stylesheet" />
<script src="~/Content/js-select2/select2.js"></script>
@*<script type="text/javascript" src="~/Scripts/CustomSelectList.js"></script>*@

<script type="text/javascript">

    $('#edit-submit').click(function () {
        $('input:disabled').removeAttr('disabled');

        var formcontainer = $('#form-container');
        var url = formcontainer.attr('data-url');
        var form = $('#edit-form');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
        form.validationEngine('validate');

        return false;
    });

    $('.modal-title').html("<b>Edit</b>");

    //Select2
    var haulierSelectList = new CustomSelectList(['#HaulierId', '@Url.Action("HaulierList", "SelectList")', 'Search Haulier']);
    haulierSelectList.init();

       //Select2
    var warehouseSelectList = new CustomSelectList(['#WarehouseId', '@Url.Action("WarehouseIdList", "SelectList")', 'Search Warehouse']);
    warehouseSelectList.init();
    $('#WarehouseId').on('select2:select', function (e) {
        var data = $(e.currentTarget).select2('data')[0];
        $('#Address').val(data.otherField)
    });


        //Select2
    var customerSelectList = new CustomSelectList(['#CustomerClientId', '@Url.Action("CustomerClientList", "SelectList")', 'Search Client']);
    customerSelectList.init();
</script>
