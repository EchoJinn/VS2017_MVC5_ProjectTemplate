@model IEnumerable<CenGts.Web.Models.ViewModels.ExpectedReceiptViewModel.ExpectedReceipt>

@{

    ViewBag.Title = "Unplanned Receipt Listing";
}

<style type="text/css">
    .dataTables_scroll {
        overflow: auto;
        position: relative;
    }

    #dataTable {
        width: 100% !important;
    }
    p {
        margin: 0 0 30px;
    }
</style>


<p>
    <a href="@Url.Action("Index", "ExpectedReceipt")"> <button type="button" class="btn btn-primary">Planned Listing</button></a> |
    <button id="filterBtn" type="button" class="btn btn-primary">Filter</button>
</p>
@Html.Partial("_LoadProcess")
@Html.Partial("_CrudModal")
@Html.Partial("_ReceiptFilter")
    <table id="dataTable" class="table table-stripsed table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GoodsReceivedNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReferenceNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExpectedReceiptDate)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.WarehouseCode)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Supplier)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.HaulierName)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ReceivedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceivedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StatusCode)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Planned)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.Comments)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>*@
                <th>
                    Task
                </th>
            </tr>
        </thead>
        <tbody>
            @*@foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.GoodsReceivedNumber, "Index", new { Controller = "ReceiptLines", item.Id, item.GoodsReceivedNumber, item.StatusCode })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferenceNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpectedReceiptDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceivedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceivedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusCode)
                    </td>
                    <td>
                        @if (item.StatusCode.Equals("Received"))
                        {
                            <div class="btn-group">
                                <a class="btn btn-primary" href="#"><i class="fa fa-gear fa-fw"></i> Action</a>
                                <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">
                                    <span class="fa fa-caret-down" title="Toggle dropdown menu"></span>
                                </a>
                                <ul class="dropdown-menu" role="menu">
                                    <li class="crud" data-id="@item.Id" data-request-url="@Url.Action("Edit")"><a>Edit</a></li>
                                    <li class="crud" data-id="@item.Id" data-request-url="@Url.Action("Details")"><a>Details</a></li>
                                    <li class="complete" data-tranid="@item.Id" href="javascript:void(0)"><a>Complete</a></li>
                                </ul>
                            </div>
                        }
                        @if (item.StatusCode.Equals("Completed"))
                        {
                            <div class="btn-group">
                                <a class="crud" data-id="@item.Id" data-request-url="@Url.Action("Details")" href="#"><i class="fa fa-gear fa-fw"></i>View Details</a>
                            </div>
                        }
                    </td>
                </tr>
            }*@
        </tbody>
    </table>

@*<script type="text/javascript" src="~/Scripts/CustomSelectList.js"></script>*@
<script type="text/javascript">
     $("#overlay").show();
    debugger;
    var isPlanned = false;

    @*$.ajax({
        url: '@Url.Action("StatusSelectList", "SelectList")' + "?isPlanned=" + isPlanned,
        method: "POST",
        datatype: "json",
        contentType: "application/json",
    });*@

    var btnCompleted = function (btnCompleted) {
        debugger;
        var tranid = btnCompleted.data('tranid');
        swal({
            title: "Complete Transaction",
            text: "Are you sure you want to complete this transaction?",
            icon: "warning",
            buttons: {
                cancel: true,
                confirm: true,
            },
        }).then(function (isConfirm) {
            location.reload();
            if (isConfirm) {
                $.ajax({
                    type: 'POST',
                    dataType: 'json',
                    url: "@Url.Action("Complete", "Receipt")",
                        data: { 'id': tranid },
                    });
                }
            }) .catch(function () {
            });
    };

    $(document).ready(function () {
        processDataTable();
    });

    $('#filterBtn').on('click', function () {
        debugger;
        $('#filterDiv')[0].hasAttribute('hidden') ? $('#filterDiv').removeAttr('hidden') : $('#filterDiv').attr('hidden', 'hidden');
    });

    $('#submitFilter').on('click', function () {
        processDataTable();
        $('#filterDiv').attr('hidden', 'hidden');
    });

    //$(document).ready(function () {
    //    var table = $('#dataTable').DataTable({

    //        //stateSave: true,
    //        "pagingType": "full_numbers",
    //        "scrollY": 300,
    //    });

    //    $('#dataTable').wrap('<div class="dataTables_scroll" />');

    //    $('#dataTable tbody')
    //        .on('mouseenter', 'td', function () {
    //            var colIdx = table.cell(this).index().column;

    //            $(table.cells().nodes()).removeClass('highlight');
    //            $(table.column(colIdx).nodes()).addClass('highlight');

    //        });
    //});

    $(".crud").on('click', function () {
        debugger;
        btnClicked($(this));
    });

    //$("#dataTable").on("click", ".crud", function () {
    //    btnClicked($(this));
    //});

    $("#createBtn").click(function () {
        btnClicked($(this));
    });

     var processDataTable = function ()
    {
        debugger;
        var isActive = $('select#IsActive').val();
        var StatusCode = $('select#StatusCode').val();

        if ($.fn.DataTable.isDataTable("#dataTable")) {
            $('#dataTable').DataTable().clear().destroy();
        }

        var oTable = $("#dataTable").DataTable(
            {
                ajax: ({
                    type: 'POST',
                    url: '@Url.Action("IndexJson")',
                    data: {
                        'IsActive': isActive,
                        'StatusCode': StatusCode
                    }
                }),
                //stateSave: true,
                //"language":
                //{
                //    "processing": "<i class='fa fa-refresh fa-spin fa-2x fa-fw'></i>"
                //},
                processing: true,
                serverSide: true,
                "pagingType": "full_numbers",
                columns: [
                    { data: "GoodsReceivedNumber", name: "GoodsReceivedNumber", searchable: true, orderable: true },
                    { data: "ReferenceNumber", name: "ReferenceNumber", searchable: true, orderable: true },
                    { data: "ExpectedReceiptDate", name: "ExpectedReceiptDate", searchable: true, orderable: true },
                    { data: "ReceivedDate", name: "ReceivedDate", searchable: true, orderable: true },
                    { data: "ReceivedBy", name: "ReceivedBy", searchable: true, orderable: true },
                    { data: "StatusCode", name: "StatusCode", searchable: true, orderable: true },
                    { data: "Actions", name: "Actions", searchable: false, orderable: false }
                ],
                createdRow: function (row, data, index) {
                    $('td', row).each(function () {
                        $(this).css('white-space', 'nowrap');
                        $.trim($(this).text()) === "Received" ? $(this).css("color", "green") : "";
                        $.trim($(this).text()) === "For Receiving" ? $(this).css("color", "blue") : "";
                        $.trim($(this).text()) === "Completed" ? $(this).css("color", "orange") : "";

                    });
                },
                fnInitComplete: function () {
                    $("#overlay").hide();
                }
                //"scrollY": 300,
            });

        $('#dataTable_filter input').unbind();
        $('#dataTable_filter input').bind('keyup', function (e) {
            if (this.value.length >= 1 || e.keyCode == 13) {
                debugger;
                oTable.search(this.value).draw();
            }
            // Ensure we clear the search if they backspace far enough
            if (this.value == "") {
                oTable.search("").draw();
            }
            return;
        });
        $('#dataTable').wrap('<div class="dataTables_scroll" />');
    }

    var btnClicked = function (btnClick) {
        var url = btnClick.data('request-url') + '?id=' + btnClick.data('id');
        AjaxCrudCall(url, "GET");
    };

  var msg = "@TempData["Message"]".toString().replace(/&quot;/g, '\"').replace(/&amp;/g, '&').replace(/&#39;/, "'").replace(/&gt;/, '>').replace(/&lt;/, '<')

    var msgAlert = "@TempData["MessageAlert"]".toString();

    if (msg != "") {

        $(document).ready(function () {
            swal(/*"Success!", */"", msg , "@TempData["MessageAlert"]".toString());
        });
            '@TempData.Remove("Message")';
            '@TempData.Remove("MessageAlert")';
    }

</script>
