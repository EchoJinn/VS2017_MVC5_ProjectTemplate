@model Application.Web.Models.ViewModels.CustomerClientViewModel
@{
    ViewBag.Title = "Customer Client Create";
}

<div id="form-container" data-url="@Url.Action("Create","CustomerClient")">
    @using (Html.BeginForm("Create", "CustomerClient", FormMethod.Post, new { id = "create-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CustomerId)

         <!-- Horizontal Form -->
        <div class="box-body">
            <div class="form-horizontal">
                <div class="col-md-12">
                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CustomerCode, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.CustomerCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.MobileNo, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", type = "number"} })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Telephone, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ContactPerson, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label col-md-15 required" })
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Website, new { @class = "control-label col-md-15" })
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <input type="submit" id="create-submit" value="Save" class="btn btn-primary pull-right" />
        </div>
    }
</div>

<script type="text/javascript">

    $('#create-submit').click(function () {
        var formcontainer = $('#form-container');
        var url = formcontainer.attr('data-url');
        var form = $('#create-form');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
        form.validationEngine('validate');

        return false;
    });

    $('.modal-title').html("<b>Create</b>");

</script>
