@model IEnumerable<Application.Web.Models.ViewModels.ExpectedReceiptViewModel.ExpectedReceiptLine>

@{

    ViewBag.Title = "Unplanned Receipt Lines Listing";

}

<style type="text/css">
    .dataTables_scroll {
        overflow: auto;
        position: relative;
    }

    #dataTable {
        width: 100% !important;
    }

    p {
        margin: 0 0 30px;
    }
</style>
<p>
    <a href="@Url.Action("Index", "Receipt")"> <button type="button" class="btn btn-danger">Back to list</button></a> |
    <button id="filterBtn" type="button" class="btn btn-primary">Filter</button>
</p>

<style type="text/css">
    .yellow {
        background-color: lightgoldenrodyellow !important;
    }
</style>

@if (ViewBag.StatCode == "Received")
{
    <p style="color: green; font-size: 15px; margin: 25px 0 0 0;">@Html.Raw(ViewBag.StatCode)</p>
}
else if (ViewBag.StatCode == "Completed")
{
    <p style="color: orange; font-size: 15px; margin: 25px 0 0 0;">@Html.Raw(ViewBag.StatCode)</p>
}

<p style="color: black; font-size: 25px;  margin: 1px 0 0 0;">GRN Number: @Html.Raw(ViewBag.GoodsReceivedNo)</p>
<p style="display: block; font-weight: bold; margin: 25px 0 0 0;"></p>
@Html.Partial("_LoadProcess")
@Html.Partial("_CrudModal")
@Html.Partial("_ListFilter")
    <table id="dataTable" class="table table-stripsed table-bordered table-hover">
        <thead>
            <tr>
                @*<th>
                        @Html.DisplayNameFor(model => model.ProductCode)
                    </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.IsItemExist)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ItemCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BrandName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemDescription)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Batch)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExpiryDate)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UomDescription)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.ReceivedDate)
                    </th>*@
                <th>
                    Task
                </th>
            </tr>
        </thead>
        <tbody>
            @*@foreach (var item in Model)
            {
                <tr>
                    @if (item.IsItemExist == false)
                    {
                        <td>
                            <a class="ItemCode" id="ItemCd" data-id="@item.Id" data-expreceiptid="@ViewBag.ExpectedReceiptId" data-grn="@ViewBag.GoodsReceivedNo" data-status="@ViewBag.StatCode" 
                               data-item="@item.ItemCode" data-quantity="@item.Quantity" data-itemdesc="@item.ItemDescription" 
                               data-request-url="@Url.Action("CreateNewItem")">@item.ItemCode</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemCode)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.BrandName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UomDescription)
                    </td>
                    <td>
                        @if (ViewBag.StatCode == "Received")
                        {
                            if (item.IsItemExist == false)
                            {
                                <div class="btn-group">
                                    <a class="crud" data-id="@item.Id" data-request-url="@Url.Action("Details")" href="#"><i class="fa fa-gear fa-fw"></i>View Details</a>
                                </div>
                            }
                            else
                            { 
                                <div class="btn-group">
                                    <a class="btn btn-primary" href="#"><i class="fa fa-gear fa-fw"></i> Action</a>
                                    <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">
                                        <span class="fa fa-caret-down" title="Toggle dropdown menu"></span>
                                    </a>
                                    <ul class="dropdown-menu" role="menu">
                                        <li class="crud" data-id="@item.Id" data-grn="@ViewBag.GoodsReceivedNo" data-status="@ViewBag.StatCode" data-request-url="@Url.Action("Edit")"><a>Edit</a></li>
                                        <li class="crud" data-id="@item.Id" data-grn="@ViewBag.GoodsReceivedNo" data-status="@ViewBag.StatCode" data-request-url="@Url.Action("Details")"><a>Details</a></li>
                                    </ul>
                                </div>
                            }
                        }
                        else if (ViewBag.StatCode == "Completed")
                        {
                            <div class="btn-group == fa
                                <a class="crud" data-id="@item.Id" data-request-url="@Url.Action("Details")" href="#"><i class="fa fa-gear fa-fw"></i>View Details</a>
                            </div>
                        }
                    </td>
                </tr>
            }*@
        </tbody>
    </table>

@*<script type="text/javascript" src="~/Scripts/CustomSelectList.js"></script>*@
<script type="text/javascript">
    $("#overlay").show();
    var msg = "@TempData["Message"]";
    if (msg != "") {
        swal("Success!", "@TempData["Message"]".toString(), "success");
        '@TempData.Remove("Message")';
    }

    $(document).ready(function () {
        processDataTable();
    });
 

    $('#submitFilter').on('click', function () {
        processDataTable();
        $('#filterDiv').attr('hidden', 'hidden');
    });

     var processDataTable = function ()
      {
        debugger;
        var isActive = $('select#IsActive').val();
        var headerId = @ViewBag.ExpectedReceiptId;

        if ($.fn.DataTable.isDataTable("#dataTable")) {
            $('#dataTable').DataTable().clear().destroy();
        }

        var oTable = $("#dataTable").DataTable(
            {
                ajax: ({
                    type: 'POST',
                    url: '@Url.Action("IndexJson")',
                    data: {
                        'IsActive': isActive,
                        'HeaderId': headerId
                    }
                }),
                //stateSave: true,
                //"language":
                //{
                //    "processing": "<i class='fa fa-refresh fa-spin fa-2x fa-fw'></i>"
                //},
                processing: true,
                serverSide: true,
                "pagingType": "full_numbers",
                columns: [
                    { data: "ItemCode", name: "ItemCode", searchable: true, orderable: true },
                    { data: "BrandName", name: "BrandName", searchable: true, orderable: true },
                    { data: "ItemDescription", name: "ItemDescription", searchable: true, orderable: true },
                    { data: "Quantity", name: "Quantity", searchable: true, orderable: true },
                    { data: "UomDescription", name: "UomDescription", searchable: true, orderable: true },
                    { data: "Actions", name: "Actions", searchable: false, orderable: false }
                ],
                "createdRow": function (row, data, dataIndex) {
                    debugger;
                    $('td', row).each(function () {
                        $(this).css('white-space', 'nowrap');
                    });

                    if (data.BrandName == "") {
                        $(row).addClass('yellow');
                    }
                },
                fnInitComplete: function () {
                    $("#overlay").hide();
                }
            });

        $('#dataTable_filter input').unbind();
        $('#dataTable_filter input').bind('keyup', function (e) {
           if (this.value.length >= 1 || e.keyCode == 13) {
                debugger;
                oTable.search(this.value).draw();
            }
            // Ensure we clear the search if they backspace far enough
            if (this.value == "") {
                oTable.search("").draw();
            }
            return;
        });
        $('#dataTable').wrap('<div class="dataTables_scroll" />');
     }

    //$(document).ready(function () {
    //    debugger;
    //    var obj = $('#ItemCd').text();

    //    var table = $('#dataTable').DataTable({
    //        stateSave: true,
    //        "pagingType": "full_numbers",
    //        "scrollY": 300,
    //        "createdRow": function (row, data, dataIndex) {
    //            if (data[1] == "") {
    //                $(row).addClass('yellow');
    //            }
    //        }
    //    });

    //    $('#dataTable').wrap('<div class="dataTables_scroll" />');
    //});

    //$(document).ready(function () {
    //    $("#dataTable").DataTable(
    //        {
    //            stateSave: true,
    //            "pagingType": "full_numbers",
    //            "scrollY": 300,
    //        });
    //});

    //$("#dataTable").on("click", ".crud", function () {
    //    btnClicked($(this));
    //});


     $(".crud").on('click', function () {
         debugger;
         btnClicked($(this));
     });

    $("#createBtn").click(function () {
        btnClicked($(this));
    });

    var btnClicked = function (btnClick) {
        var url = "";

        if (btnClick.data('target') == "Delete") {
                url = btnClick.data('request-url') + '?id=' + btnClick.data('id') + '&expectedReceiptId=' + @ViewBag.ExpectedReceiptId;
        }
        else {
            url = btnClick.data('request-url') + '?id=' + btnClick.data('id') + '&GoodsReceivedNumber=' + btnClick.data('grn') + '&StatusCode=' + btnClick.data('status');
        }
        AjaxCrudCall(url, "GET");
    };

    var btnCreateNewItem = function (btnCreateNewItem) {
        debugger;
        var url = btnCreateNewItem.data('request-url') + '?ItemCode=' + btnCreateNewItem.data('item') + '&Quantity=' + btnCreateNewItem.data('quantity') + '&ItemDescription=' + btnCreateNewItem.data('itemdesc')
            + '&ExpectedReceiptId=' + btnCreateNewItem.data('expreceiptid') + '&GoodsReceivedNumber=' + btnCreateNewItem.data('grn') + '&StatusCode=' + btnCreateNewItem.data('status') +
            '&ExpectedReceiptLineId=' + btnCreateNewItem.data('id');
        AjaxCrudCall(url, "GET");
    };


</script>